#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qlbaihat.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qlbaihat")]
	public partial class MyData : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaiHat(BaiHat instance);
    partial void UpdateBaiHat(BaiHat instance);
    partial void DeleteBaiHat(BaiHat instance);
    partial void InsertDongNhac(DongNhac instance);
    partial void UpdateDongNhac(DongNhac instance);
    partial void DeleteDongNhac(DongNhac instance);
    partial void InsertNhacSy(NhacSy instance);
    partial void UpdateNhacSy(NhacSy instance);
    partial void DeleteNhacSy(NhacSy instance);
    #endregion
		
		public MyData() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["qlbaihatConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyData(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyData(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyData(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyData(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaiHat> BaiHats
		{
			get
			{
				return this.GetTable<BaiHat>();
			}
		}
		
		public System.Data.Linq.Table<DongNhac> DongNhacs
		{
			get
			{
				return this.GetTable<DongNhac>();
			}
		}
		
		public System.Data.Linq.Table<NhacSy> NhacSies
		{
			get
			{
				return this.GetTable<NhacSy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiHat")]
	public partial class BaiHat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBH;
		
		private string _TenBaiHat;
		
		private System.Nullable<int> _IdNS;
		
		private System.Nullable<int> _IdBN;
		
		private string _GhiChu;
		
		private EntityRef<DongNhac> _DongNhac;
		
		private EntityRef<NhacSy> _NhacSy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBHChanging(int value);
    partial void OnIdBHChanged();
    partial void OnTenBaiHatChanging(string value);
    partial void OnTenBaiHatChanged();
    partial void OnIdNSChanging(System.Nullable<int> value);
    partial void OnIdNSChanged();
    partial void OnIdBNChanging(System.Nullable<int> value);
    partial void OnIdBNChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public BaiHat()
		{
			this._DongNhac = default(EntityRef<DongNhac>);
			this._NhacSy = default(EntityRef<NhacSy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBH
		{
			get
			{
				return this._IdBH;
			}
			set
			{
				if ((this._IdBH != value))
				{
					this.OnIdBHChanging(value);
					this.SendPropertyChanging();
					this._IdBH = value;
					this.SendPropertyChanged("IdBH");
					this.OnIdBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBaiHat", DbType="NVarChar(100)")]
		public string TenBaiHat
		{
			get
			{
				return this._TenBaiHat;
			}
			set
			{
				if ((this._TenBaiHat != value))
				{
					this.OnTenBaiHatChanging(value);
					this.SendPropertyChanging();
					this._TenBaiHat = value;
					this.SendPropertyChanged("TenBaiHat");
					this.OnTenBaiHatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNS", DbType="Int")]
		public System.Nullable<int> IdNS
		{
			get
			{
				return this._IdNS;
			}
			set
			{
				if ((this._IdNS != value))
				{
					if (this._NhacSy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNSChanging(value);
					this.SendPropertyChanging();
					this._IdNS = value;
					this.SendPropertyChanged("IdNS");
					this.OnIdNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBN", DbType="Int")]
		public System.Nullable<int> IdBN
		{
			get
			{
				return this._IdBN;
			}
			set
			{
				if ((this._IdBN != value))
				{
					if (this._DongNhac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBNChanging(value);
					this.SendPropertyChanging();
					this._IdBN = value;
					this.SendPropertyChanged("IdBN");
					this.OnIdBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DongNhac_BaiHat", Storage="_DongNhac", ThisKey="IdBN", OtherKey="IdDN", IsForeignKey=true)]
		public DongNhac DongNhac
		{
			get
			{
				return this._DongNhac.Entity;
			}
			set
			{
				DongNhac previousValue = this._DongNhac.Entity;
				if (((previousValue != value) 
							|| (this._DongNhac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DongNhac.Entity = null;
						previousValue.BaiHats.Remove(this);
					}
					this._DongNhac.Entity = value;
					if ((value != null))
					{
						value.BaiHats.Add(this);
						this._IdBN = value.IdDN;
					}
					else
					{
						this._IdBN = default(Nullable<int>);
					}
					this.SendPropertyChanged("DongNhac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhacSy_BaiHat", Storage="_NhacSy", ThisKey="IdNS", OtherKey="IdNS", IsForeignKey=true)]
		public NhacSy NhacSy
		{
			get
			{
				return this._NhacSy.Entity;
			}
			set
			{
				NhacSy previousValue = this._NhacSy.Entity;
				if (((previousValue != value) 
							|| (this._NhacSy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhacSy.Entity = null;
						previousValue.BaiHats.Remove(this);
					}
					this._NhacSy.Entity = value;
					if ((value != null))
					{
						value.BaiHats.Add(this);
						this._IdNS = value.IdNS;
					}
					else
					{
						this._IdNS = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhacSy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DongNhac")]
	public partial class DongNhac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDN;
		
		private string _TenDongNhac;
		
		private string _GhiChu;
		
		private EntitySet<BaiHat> _BaiHats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDNChanging(int value);
    partial void OnIdDNChanged();
    partial void OnTenDongNhacChanging(string value);
    partial void OnTenDongNhacChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DongNhac()
		{
			this._BaiHats = new EntitySet<BaiHat>(new Action<BaiHat>(this.attach_BaiHats), new Action<BaiHat>(this.detach_BaiHats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDN
		{
			get
			{
				return this._IdDN;
			}
			set
			{
				if ((this._IdDN != value))
				{
					this.OnIdDNChanging(value);
					this.SendPropertyChanging();
					this._IdDN = value;
					this.SendPropertyChanged("IdDN");
					this.OnIdDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDongNhac", DbType="NVarChar(100)")]
		public string TenDongNhac
		{
			get
			{
				return this._TenDongNhac;
			}
			set
			{
				if ((this._TenDongNhac != value))
				{
					this.OnTenDongNhacChanging(value);
					this.SendPropertyChanging();
					this._TenDongNhac = value;
					this.SendPropertyChanged("TenDongNhac");
					this.OnTenDongNhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DongNhac_BaiHat", Storage="_BaiHats", ThisKey="IdDN", OtherKey="IdBN")]
		public EntitySet<BaiHat> BaiHats
		{
			get
			{
				return this._BaiHats;
			}
			set
			{
				this._BaiHats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiHats(BaiHat entity)
		{
			this.SendPropertyChanging();
			entity.DongNhac = this;
		}
		
		private void detach_BaiHats(BaiHat entity)
		{
			this.SendPropertyChanging();
			entity.DongNhac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhacSy")]
	public partial class NhacSy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNS;
		
		private string _TenNhacSy;
		
		private System.Nullable<int> _Tuoi;
		
		private string _GioiTinh;
		
		private string _QueQuan;
		
		private EntitySet<BaiHat> _BaiHats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNSChanging(int value);
    partial void OnIdNSChanged();
    partial void OnTenNhacSyChanging(string value);
    partial void OnTenNhacSyChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    #endregion
		
		public NhacSy()
		{
			this._BaiHats = new EntitySet<BaiHat>(new Action<BaiHat>(this.attach_BaiHats), new Action<BaiHat>(this.detach_BaiHats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNS
		{
			get
			{
				return this._IdNS;
			}
			set
			{
				if ((this._IdNS != value))
				{
					this.OnIdNSChanging(value);
					this.SendPropertyChanging();
					this._IdNS = value;
					this.SendPropertyChanged("IdNS");
					this.OnIdNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhacSy", DbType="NVarChar(50)")]
		public string TenNhacSy
		{
			get
			{
				return this._TenNhacSy;
			}
			set
			{
				if ((this._TenNhacSy != value))
				{
					this.OnTenNhacSyChanging(value);
					this.SendPropertyChanging();
					this._TenNhacSy = value;
					this.SendPropertyChanged("TenNhacSy");
					this.OnTenNhacSyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(100)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhacSy_BaiHat", Storage="_BaiHats", ThisKey="IdNS", OtherKey="IdNS")]
		public EntitySet<BaiHat> BaiHats
		{
			get
			{
				return this._BaiHats;
			}
			set
			{
				this._BaiHats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiHats(BaiHat entity)
		{
			this.SendPropertyChanging();
			entity.NhacSy = this;
		}
		
		private void detach_BaiHats(BaiHat entity)
		{
			this.SendPropertyChanging();
			entity.NhacSy = null;
		}
	}
}
#pragma warning restore 1591
